use std::io;

struct Livre {
    titre: String,
    auteur: String,
    annee: u32,
    disponible: bool,
}

fn main() {
    let mut livres: Vec<Livre> = Vec::new();

    loop {
        println!("\n--- MENU ---");
        println!("1. Ajouter un livre");
        println!("2. Emprunter un livre");
        println!("3. Retourner un livre");
        println!("4. Afficher tous les livres");
        println!("5. Afficher les livres dispo");
        println!("6. Quitter");

        let mut choix = String::new();
        io::stdin().read_line(&mut choix).unwrap();
        let choix = choix.trim();

        if choix == "1" {
            println!("Titre:");
            let mut titre = String::new();
            io::stdin().read_line(&mut titre).unwrap();
            let titre = titre.trim().to_string();

            let mut deja_existe = false;
            for livre in &livres {
                if livre.titre == titre {
                    deja_existe = true;
                    break;
                }
            }

            if deja_existe {
                println!("Le livre existe déjà");
                continue;
            }

            println!("Auteur:");
            let mut auteur = String::new();
            io::stdin().read_line(&mut auteur).unwrap();
            let auteur = auteur.trim().to_string();

            println!("Année:");
            let mut annee_str = String::new();
            io::stdin().read_line(&mut annee_str).unwrap();
            let annee: u32 = match annee_str.trim().parse() {
                Ok(num) => num,
                Err(_) => {
                    println!("Année invalide");
                    continue;
                }
            };

            livres.push(Livre {
                titre,
                auteur,
                annee,
                disponible: true,
            });

            println!("Livre ajouté.");
        } else if choix == "2" {
            println!("Titre du livre à emprunter:");
            let mut titre = String::new();
            io::stdin().read_line(&mut titre).unwrap();
            let titre = titre.trim();

            let mut trouve = false;
            for livre in &mut livres {
                if livre.titre == titre {
                    trouve = true;
                    if livre.disponible {
                        livre.disponible = false;
                        println!("Livre emprunté");
                    } else {
                        println!("Déjà emprunté");
                    }
                }
            }
            if !trouve {
                println!("Pas trouvé");
            }
        } else if choix == "3" {
            println!("Titre du livre à retourner:");
            let mut titre = String::new();
            io::stdin().read_line(&mut titre).unwrap();
            let titre = titre.trim();

            let mut trouve = false;
            for livre in &mut livres {
                if livre.titre == titre {
                    trouve = true;
                    if !livre.disponible {
                        livre.disponible = true;
                        println!("Livre retourné");
                    } else {
                        println!("Ce livre était déjà dispo");
                    }
                }
            }
            if !trouve {
                println!("Livre non trouvé");
            }
        } else if choix == "4" {
            for livre in &livres {
                println!(
                    "{} par {} ({}) - {}",
                    livre.titre,
                    livre.auteur,
                    livre.annee,
                    if livre.disponible { "dispo" } else { "emprunté" }
                );
            }
        } else if choix == "5" {
            for livre in &livres {
                if livre.disponible {
                    println!("{} par {} ({})", livre.titre, livre.auteur, livre.annee);
                }
            }
        } else if choix == "6" {
            break;
        } else {
            println!("Choix invalide");
        }
    }

    println!("Fin du programme");
}
